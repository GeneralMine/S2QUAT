// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Action

model Action {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  action    String
  entitiyID Int?
  original  String?
  changes   String?
  exception String?

  status      ActionStatus
  entitiyName ActionEntitiy?
}

enum ActionStatus {
  ERFOLG
  FEHLER
  LAUFEND
}

enum ActionEntitiy {
  USER
  PROJEKT
  SZENARIO
  UNTERNEHMEN
  FRAGEBOGEN
  SEITE
  KATEGORIE
  FRAGE
  VORLAGE
  FELD
  MERKMAL
  FAKTOR
  KRITERIUM
  ANTWORT
  FRAGEANTWORT
  TESTPERSON
}

// User

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email       String   @unique
  name        String
  password    String
  last_logout DateTime @default(now())

  status UserStatus
  rolle  UserRolle

}

enum UserStatus {
  AKTIV
  DEAKTIVIERT
  NICHT_VERIFIZIERT
}

enum UserRolle {
  USER
  EDITOR
  ADMIN
}

// Projekt

model Projekt {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name          String
  beschreibung  String?
  ziel          String?
  Projekt_start DateTime
  Projekt_end   DateTime

  status ProjektStatus
}

enum ProjektStatus {
  AKTIV
  INAKTIV
  ARCHIVIERT
}

// Unternehmen

model Unternehmen {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  logo String?
}

// Szenario

model Szenario {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name         String
  beschreibung String?
}

// Fragebogen

model Fragebogen {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name         String
  beschreibung String?
  reihenfolge  Int     @default(0)

  status FragebogenStatus
}

enum FragebogenStatus {
  VALIDE
  INVALIDE
}

// Antwort
model Antwort {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  datum DateTime @default(now())

}
