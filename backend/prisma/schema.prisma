// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Action

model Action {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  action    String
  entitiyID Int?
  original  String?
  changes   String?
  exception String?

  status      ActionStatus   @default(ERROR)
  entitiyName ActionEntitiy?
}

enum ActionStatus {
  SUCCESS
  ERROR
  RUNNING
}

enum ActionEntitiy {
  ANSWER
  ATTRIBUTE
  CATEGORY
  COMPANY
  CRITERIA
  FACTOR
  FIELD
  PAGE
  PROJECT
  QUESTION
  RESPONSE
  SCENARIO
  SURVEY
  TEMPLATE
  TESTPERSON
  USER
}

// User

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email       String   @unique
  name        String
  password    String
  last_logout DateTime @default(now())

  status UserStatus @default(ACTIVE)
  role   UserRolle  @default(USER)
}

enum UserStatus {
  ACTIVE
  DEACTIVATED
  NOT_VERIFIED
}

enum UserRolle {
  USER
  EDITOR
  ADMIN
}

// Project

model Project {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name          String
  description   String?
  goal          String?
  project_start DateTime
  project_end   DateTime

  status ProjectStatus @default(ACTIVE)
}

enum ProjectStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}

// Company

model Company {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  logo String?
}

// Scenario

model Scenario {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
}

// Survey

model Survey {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  order       Int     @default(0)

  status SurveyStatus @default(ACTIVE)
}

enum SurveyStatus {
  ACTIVE
  CLOSED
}

// Response

model Response {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  location String?
  feedback String?
  notes    String?

  typ ResponseType @default(VALID)
}

enum ResponseType {
  VALID
  INVALID
}

// TestPerson

model TestPerson {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String
  signature Boolean
  age       Int?
}

enum TestPersonSex {
  MALE
  FEMALE
  NOT_BINARY
}
